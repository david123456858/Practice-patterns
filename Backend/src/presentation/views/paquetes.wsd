@startuml EcoMove-Architecture
!theme plain
title EcoMove Platform - Clean Architecture

skinparam rectangle {
    BackgroundColor LightBlue
    BorderColor Navy
}

skinparam component {
    BackgroundColor LightYellow
    BorderColor DarkOrange
}

' Actores externos
actor "Cliente Móvil" as client
actor "Admin Web" as admin
database "Almacenamiento en Memoria" as storage

package "EcoMove Platform" {
    
    ' Capa de Presentación (Adaptadores)
    rectangle "**CAPA DE PRESENTACIÓN**" as presentation {
        component "REST API" as api {
            [AuthController]
            [UserController] 
            [VehicleController]
            [LoanController]
            [StationController]
        }
        
        component "Middlewares" as middleware {
            [Validation DTO]
            [CORS Handler]
            [Morgan Logger]
        }
    }
    
    ' Capa de Aplicación (Casos de Uso)
    rectangle "**CAPA DE APLICACIÓN**" as application {
        component "Casos de Uso" as usecases {
            [AuthService]
            [UserService]
            [VehicleService] 
            [LoanService]
            [StationService]
            [PaymentService]
        }
        
        component "DTOs" as dtos {
            [UserDtos]
            [VehicleDtos]
            [LoanDtos]
            [StationDtos]
        }
    }
    
    ' Capa de Dominio (Lógica de Negocio)
    rectangle "**CAPA DE DOMINIO**" as domain {
        component "Entidades" as entities {
            [User]
            [Jerarquía de Vehículos]
            [Préstamo] 
            [Estación]
            [Pago]
            [Role]
        }
        
        component "Objetos de Valor" as valueobjects {
            [GeoLocalización]
            [Batería]
        }
        
        component "Enumeraciones" as enums {
            [TipoVehiculo]
            [EstadoVehiculo]
            [EstadoPréstamo]
            [EstadoPago]
        }
        
        component "Fábricas" as factories {
            [VehicleFactory]
            [PaymentFactory]
        }
    }
    
    ' Capa de Infraestructura (Adaptadores)
    rectangle "**CAPA DE INFRAESTRUCTURA**" as infrastructure {
        component "Repositorios" as repositories {
            [UserRepository]
            [VehicleRepository]
            [LoanRepository] 
            [StationRepository]
        }
        
        component "Configuración Servidor" as server {
            [Servidor Express]
            [Configuración de Rutas]
            [Configuración de Entorno]
        }
    }
}

' Conexiones externas
client --> api : Peticiones HTTP
admin --> api : Peticiones HTTP
repositories --> storage : Persistencia de Datos

' Conexiones internas  
api --> middleware : valida
middleware --> usecases : delega a
usecases --> entities : usa
usecases --> factories : crea mediante
usecases --> repositories : persiste mediante
repositories --> entities : maneja

' Flujo de datos
api ..> dtos : transforma
usecases ..> valueobjects : crea
entities ..> enums : usa

note right of domain
  **Lógica Principal de Negocio**
  • Reglas de alquiler de vehículos
  • Gestión de préstamos
  • Procesamiento de pagos
  • Permisos de usuarios
end note

note left of infrastructure
  **Detalles Técnicos**
  • Almacenamiento en memoria
  • Servidor web Express.js
  • Endpoints API RESTful
  • Patrón Repository
end note

note top of application
  **Operaciones de Negocio**
  • Autenticación y Autorización
  • Flujos de alquiler de vehículos  
  • Gestión de estaciones
  • Procesamiento de pagos
end note

@enduml